name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        id: python-dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install flake8
          python -m pip install pytest
      - name: Lint with flake8
        id: flake8
        run: |
          flake8 . --count --max-complexity=10 --max-line-length=88 --statistics
      - name: Test with pytest
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB_NAME: ${{ secrets.POSTGRES_DB_NAME }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          KAFKA_SERVICE_URI: ${{ secrets.KAFKA_SERVICE_URI }}
          GPG_PWD: ${{ secrets.GPG_PWD }}
        id: tests
        run: |
          mkdir $HOME/secrets
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_PWD" --output $HOME/secrets/ca.pem ./encrypetd_secrets/ca.pem.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_PWD" --output $HOME/secrets/service.cert ./encrypetd_secrets/service.cert.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_PWD" --output $HOME/secrets/service.key ./encrypetd_secrets/service.key.gpg
          SSL_CA_FILE_PATH=$HOME/secrets/ca.pem SSL_CERTFILE_PATH=$HOME/secrets/service.cert SSL_KEYFILE_PATH=$HOME/secrets/service.key python -m pytest